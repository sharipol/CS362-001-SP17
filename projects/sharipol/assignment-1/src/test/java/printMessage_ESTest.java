/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 17 21:37:15 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class printMessage_ESTest extends printMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      printMessage printMessage0 = null;
      try {
        printMessage0 = new printMessage((String) null, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("printMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      printMessage printMessage0 = new printMessage("Printed message a total of: ", 0);
      assertEquals(28, printMessage0.numCharsInMessage);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      printMessage printMessage0 = new printMessage("", 6);
      assertEquals(2, printMessage0.numCharsPrinted);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      printMessage printMessage0 = null;
      try {
        printMessage0 = new printMessage(":", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Message is empty, the size is: 1
         //
         assertThrownBy("printMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      printMessage printMessage0 = null;
      try {
        printMessage0 = new printMessage("Printed message a total of: ", 56);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Too many times to print
         //
         assertThrownBy("printMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      printMessage printMessage0 = new printMessage("_&~<dyb", 10);
      assertEquals(1, printMessage0.numWordsInMessage);
  }
}
