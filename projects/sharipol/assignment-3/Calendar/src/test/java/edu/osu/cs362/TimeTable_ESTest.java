/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 03:36:53 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;

import edu.osu.cs362.Appt;
import edu.osu.cs362.CalDay;
import edu.osu.cs362.TimeTable;
import java.util.GregorianCalendar;
import java.util.LinkedList;


public class TimeTable_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar(11, 11, 11);
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.getAppts();
      Appt appt0 = new Appt(11, 11, 11, 11, 1, "Second date specified is not before the first date specified.", "Second date specified is not before the first date specified.");
      linkedList0.add(appt0);
      linkedList0.add(appt0);
      timeTable0.deleteAppt(linkedList0, appt0);
      assertEquals(1, linkedList0.size());
      assertEquals(1, calDay0.getSizeAppts());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      // Undeclared exception!
      try { 
        timeTable0.getApptRange((LinkedList<Appt>) null, (GregorianCalendar) null, (GregorianCalendar) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //assertThrownBy("edu.osu.cs362.TimeTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar(11, 11, 11);
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.getAppts();
      Appt appt0 = new Appt(1, 1, 1, 1, 11, "Second date specified is not before the first date specified.", "Second date specified is not before the first date specified.");
      linkedList0.add(appt0);
      timeTable0.deleteAppt(linkedList0, appt0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, calDay0.getSizeAppts());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar(11, 11, 11);
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.getAppts();
      Appt appt0 = new Appt(11, 11, 11, 11, 1, "Second date specified is not before the first date specified.", "Second date specified is not before the first date specified.");
      linkedList0.add(appt0);
      Appt appt1 = new Appt(1, 1, 1, 1, 11, "Second date specified is not before the first date specified.", "Second date specified is not before the first date specified.");
      timeTable0.deleteAppt(linkedList0, appt1);
      assertEquals(1, linkedList0.size());
      assertEquals(1, calDay0.getSizeAppts());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      LinkedList<Appt> linkedList0 = new LinkedList<Appt>();
      linkedList0.add((Appt) null);
      Appt appt0 = new Appt(3, 3, 3, 3, 3, "_T hMteo", "gK0#Azn'S3X_ckK");
      // Undeclared exception!
      try { 
        timeTable0.deleteAppt(linkedList0, appt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //assertThrownBy("edu.osu.cs362.TimeTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar((-1), (-1), (-1));
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.getAppts();
      Appt appt0 = new Appt((-1), (-1), (-1), (-1), (-1), "/p", "Second date specified is not before the first date specified.");
      LinkedList<Appt> linkedList1 = timeTable0.deleteAppt(linkedList0, appt0);
      assertNull(linkedList1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar((-1), (-1), (-1));
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.getAppts();
      LinkedList<Appt> linkedList1 = timeTable0.deleteAppt(linkedList0, (Appt) null);
      assertNull(linkedList1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      Appt appt0 = new Appt((-1), (-1), (-1), (-1), (-1), "/p", "Second date specified is not before the first date specified.");
      LinkedList<Appt> linkedList0 = timeTable0.deleteAppt((LinkedList<Appt>) null, appt0);
      assertNull(linkedList0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar((-1), (-1), (-1));
      // Undeclared exception!
      try { 
        timeTable0.getApptRange((LinkedList<Appt>) null, mockGregorianCalendar0, mockGregorianCalendar0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Second date specified is not before the first date specified.
         //
         //assertThrownBy("edu.osu.cs362.TimeTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      LinkedList<Appt> linkedList0 = new LinkedList<Appt>();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar(187, 187, 187, 187, 187, 187);
      GregorianCalendar mockGregorianCalendar1 = new GregorianCalendar();
      // Undeclared exception!
//      try {
//        timeTable0.getApptRange(linkedList0, mockGregorianCalendar0, mockGregorianCalendar1);
//        fail("Expecting exception: TooManyResourcesException");
//
//      } catch(TooManyResourcesException e) {
//         //
//         // Loop has been executed more times than the allowed 10000
//         //
//         //assertThrownBy("org.evosuite.runtime.LoopCounter", e);
//      }
  }
}
